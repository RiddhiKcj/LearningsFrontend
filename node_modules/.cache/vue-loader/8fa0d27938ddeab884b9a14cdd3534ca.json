{"remainingRequest":"/home/riddhi/Desktop/learnings/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/riddhi/Desktop/learnings/frontend/src/components/todos/List.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/riddhi/Desktop/learnings/frontend/src/components/todos/List.vue","mtime":1574771198987},{"path":"/home/riddhi/Desktop/learnings/frontend/node_modules/css-loader/dist/cjs.js","mtime":1574162604976},{"path":"/home/riddhi/Desktop/learnings/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1574162606994},{"path":"/home/riddhi/Desktop/learnings/frontend/node_modules/postcss-loader/src/index.js","mtime":1574162606108},{"path":"/home/riddhi/Desktop/learnings/frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1574163471880},{"path":"/home/riddhi/Desktop/learnings/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1574162603991},{"path":"/home/riddhi/Desktop/learnings/frontend/node_modules/vue-loader/lib/index.js","mtime":1574162606994}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi50b2RvcyB1bCBsaSBpLmZhLmZhLXRyYXNoLWFsdCB7CiAgdmlzaWJpbGl0eTogaGlkZGVuOwogIG1hcmdpbi10b3A6IDVweDsKfQoudG9kb3MgdWwgbGk6aG92ZXIgewogIGJhY2tncm91bmQ6ICNmY2ZjZmM7Cn0KLnRvZG9zIHVsIGxpOmhvdmVyIGkuZmEuZmEtdHJhc2gtYWx0IHsKICB2aXNpYmlsaXR5OiB2aXNpYmxlOwp9Cg=="},{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"List.vue","sourceRoot":"src/components/todos","sourcesContent":["<template>\n    <div class=\"todos\">\n      <div class=\"alert alert-danger\" v-if=\"error\">{{ error }}</div>\n      <h3>Todos</h3>\n      \n      <input class=\"form-control\"\n        autofocus autocomplete=\"off\"\n        placeholder=\"What needs to be done?\"\n        v-model=\"newTodo\"\n        @keyup.enter=\"addTodo\" />\n      <br />\n      <ul class=\"list-group\">\n        <li class=\"list-group-item\" v-for=\"todo in todos\" :key=\"todo.id\" :todo=\"todo\">\n          <div v-show=\"todo != editedTodo\" @dblclick=\"editTodo(todo)\">\n            <label>{{ todo.title }}</label>\n            <i class=\"fa fa-trash-alt float-right\" @click=\"removeTodo(todo)\"></i>\n          </div>\n          <div v-show=\"todo == editedTodo\">\n            <input class=\"form-control\"\n              v-todo-focus\n              @blur=\"updateTodo(todo)\"\n              @keyup.enter=\"updateTodo(todo)\"\n              v-model=\"todo.title\"\n            />\n          </div>\n        </li>\n      </ul>\n      <v-spacer />\n      <v-btn @click=\"logout()\">Logout</v-btn>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'List',\n    data () {\n      return {\n        todos: [],\n        newTodo: [],\n        error: '',\n        editedTodo: ''\n      }\n    },\n    created () {\n      if (!localStorage.signedIn) {\n        this.$router.replace('/')\n      } else {\n        this.$http.secured.get('/api/v1/todos',{\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.access\n          }})\n          .then(response => { this.todos = response.data })\n          .catch(error => this.setError(error, 'Something went wrong'))\n      }\n    },\n    methods: {\n      setError (error, text) {\n        this.error = (error.response && error.response.data && error.response.data.error) || text\n      },\n      addTodo () {\n        const value = this.newTodo && this.newTodo.trim()\n        if (!value) {\n          return\n        }\n        this.$http.secured.post('/api/v1/todos', { todo: { title: this.newTodo } }, {\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.access\n          }\n        })\n          .then(response => {\n            this.todos.push(response.data)\n            this.newTodo = ''\n          })\n          .catch(error => this.setError(error, 'Cannot create todo'))\n      },\n      removeTodo (todo) {\n        this.$http.secured.delete(`/api/v1/todos/${todo.id}`, {\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.access\n          }\n        })\n          .then(response => {\n            this.todos.splice(this.todos.indexOf(todo), 1)\n            this.error = response\n          })\n          .catch(error => this.setError(error, 'Cannot delete todo'))\n      },\n      editTodo (todo) {\n        this.editedTodo = todo\n      },\n      updateTodo (todo) {\n        this.editedTodo = ''\n        this.$http.secured.patch(`/api/v1/todos/${todo.id}`, { todo: { title: todo.title } }, {\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.access\n          }\n        })\n          .catch(error => this.setError(error, 'Cannot update todo'))\n      },\n      logout (){\n        this.$http.secured.delete('/signin', {\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.access\n          }\n        })\n          .then(response => {\n            console.log(response)\n            delete localStorage.access\n            delete localStorage.csrf\n            delete localStorage.signedIn\n            this.$router.push('/')\n          })\n          .catch(error => this.setError(error, 'Cannot delete todo'))\n      }\n    },\n    directives: {\n      'todo-focus': function (el) {\n        el.focus()\n      }\n    }\n  }\n  </script>\n  \n  <style lang=\"css\">\n  .todos ul li i.fa.fa-trash-alt {\n    visibility: hidden;\n    margin-top: 5px;\n  }\n  .todos ul li:hover {\n    background: #fcfcfc;\n  }\n  .todos ul li:hover i.fa.fa-trash-alt {\n    visibility: visible;\n  }\n  </style>"]}]}